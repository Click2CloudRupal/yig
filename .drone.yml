---
kind: pipeline
type: docker
name: yig

clone:
  git:
    image: plugins/git

platform:
  os: linux
  arch: amd64

workspace:
  path: /drone/src/yig

steps:
- name: build & test
  image: centos-yig:v1.0.1
  commands:
  - export GOPROXY=https://goproxy.cn
  - export GO111MODULE=on
  - export GONOPROXY="10.0.45.221"
  - export GONOSUMDB="10.0.45.221"
  - git checkout $DRONE_COMMIT
  - git fetch -t
  - make build_internal
  - cp -f integrate/test-env/yig.toml /etc/yig/yig.toml
  - cp -f plugins/*.so /etc/yig/plugins/
  - sed -i 's/cluster/single/' /etc/yig/yig.toml
  - sed -i 's/mybucket/mybucket${DRONE_BUILD_NUMBER}/' test/go/lib/client.go
  - /usr/sbin/dnsmasq -k &
  - nohup ./yig >/dev/null 2>&1 &
  - sleep 10
  - ./lc &
  - sleep 10
  - ping -c 1 s3.test.com
  - ps aux|grep yig
  - ps aux|grep lc
  - ps aux|grep migrate
  - python test/sanity.py
  - pushd test/go
  - export GOPROXY=https://goproxy.cn
  - go test -v
  - popd
  when:
    event:
      exclude:
      - tag


- name: clean up database
  image: centos-yig:v1.0.1
  commands:
  - echo " //TODO clean TiKV"
  when:
    event:
    - failure

- name: make package with test
  image: centos-yig:v1.0.1
  environment:
    VER_DRONE: ${DRONE_SOURCE_BRANCH}
    REL_DRONE: ALPHA
  commands:
  - export GOPROXY=https://goproxy.cn
  - export GO111MODULE=on
  - export GONOPROXY="10.0.45.221"
  - export GONOSUMDB="10.0.45.221"
  - cp integrate/id_rsa ~/.ssh/id_rsa
  - cp integrate/id_rsa.pub ~/.ssh/id_rsa.pub
  - cp integrate/known_hosts ~/.ssh/known_hosts
  - git config --global url."git@10.0.45.221:".insteadOf "https://10.0.45.221/"
  - make pkg_internal
  when:
    branch:
    - develop-shanghai
    - develop
    event:
    - pull_request
  depends_on:
  - build & test

- name: update package to ftp
  image: cschlosser/drone-ftps
  environment:
    FTP_USERNAME:
      from_secret: ftp_user_name
    FTP_PASSWORD:
      from_secret: ftp_user_pass
    PLUGIN_HOSTNAME: 10.0.47.182
    PLUGIN_VERIFY: false
    PLUGIN_SECURE: false
    PLUGIN_DEST_DIR: /pub/Untested_Packages/yig
    PLUGIN_SRC_DIR: /packages/
  when:
    branch:
    - develop
    - develop-shanghai
    event:
    - pull_request
  depends_on:
  - make package with test

- name: deploy the test package to the target environment
  image: centos-yig:v1.0.1
  commands:
  - cd integrate
  - curDate=yig_$(date "+%Y%m%d-%H%M%S")
  - ssh 10.0.42.5 "mkdir /test_packages/$curDate"
  - scp test-env/yig.toml 10.0.42.5:/test_packages/$curDate
  - scp ../*.x86_64.rpm 10.0.42.5:/test_packages/$curDate
  - ssh 10.0.42.5 "cd /test_packages;sh update_yig_package.sh $curDate"
  when:
    branch:
    - develop
    - develop-shanghai
    event:
    - pull_request
  depends_on:
  - make package with test


- name: make package with published
  image: centos-yig:v1.0.1
  environment:
    VER_DRONE: ${DRONE_TAG=latest}
    REL_DRONE: PUB
  commands:
    - export GOPROXY=https://goproxy.cn
    - export GO111MODULE=on
    - export GONOPROXY="10.0.45.221"
    - export GONOSUMDB="10.0.45.221"
    - cp integrate/id_rsa ~/.ssh/id_rsa
    - cp integrate/id_rsa.pub ~/.ssh/id_rsa.pub
    - cp integrate/known_hosts ~/.ssh/known_hosts
    - git config --global url."git@10.0.45.221:".insteadOf "https://10.0.45.221/"
    - make pkg_internal
  when:
    event:
    - tag

- name: update package to s3
  image: plugins/s3
  settings:
    bucket: published-packages
    access_key:
      from_secret: s3_access_key
    secret_key:
      from_secret: s3_secret_key
    acl: public-read
    source: /drone/src/yig/packages/*
    target: /yig/
    strip_prefix: /drone/src/yig/packages/
    path_style: true
    endpoint: http://oss-cn-north-2.unicloudsrv.com
  when:
    event: tag
  depends_on:
  - make package with published

trigger:
  event:
  - push
  - tag
  - pull_request
